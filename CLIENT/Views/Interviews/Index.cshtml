
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutAdministrator.cshtml";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-4 form-inline">
            <div class="upload-btn-wrapper">
                <button class="fa fa-cloud-upload btn btn-up"></button>
                <input type="file" name="formFile" id="formFile" onchange="uploadFile('formFile');" />
            </div>
            <div class="upload-btn-wrapper">
                <button type="button" id="Create" class="btn right fa fa-plus-circle btn-add" data-toggle="modal" data-target="#myModal" onclick="ClearScreen();"></button>
            </div>
            <a class="btn-dwn fa fa-file-excel-o" tabindex="0" aria-controls="example23" data-placement="down" title="Export To Excel" asp-controller="Interviews" asp-action="exporttoexcel">
            </a>
            <a class="btn-add fa fa-file-pdf-o" tabindex="0" aria-controls="example23" data-placement="down" title="Export To PDF" asp-controller="Interviews" asp-action="Report">
            </a>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col">
            <label for="Customer">From</label><br />
            <input type="date" id="startDate" class="form-control" placeholder="Start Date">
        </div>
        <div class="col">
            <label for="Customer">To</label><br />
            <input type="date" id="endDate" class="form-control" placeholder="End Date">
        </div>
        <div class="col">
            <br />
            <button type="submit" id="search" class="btn btn-block btn-primary" onclick="LoadIndexFilterSort()">Filter</button>
        </div>
        <div class="col">
            <br />
            <button type="submit" id="reset" class="btn btn-block btn-primary" onclick="LoadIndexReset()">Reset</button>
        </div>
    </div>
    <br />
    <table class="table dt-responsive nowrap" id="table" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th style="background-color:skyblue;color:white;text-align:center;width:100px">
                    No.
                </th>
                <th style="background-color:skyblue;color:white;text-align:center">
                    NIK
                </th>
                <th style="background-color:skyblue;color:white;text-align:center">
                    Employee
                </th>
                <th style="background-color:skyblue;color:white;text-align:center">
                    DateTime
                </th>
                <th style="background-color:skyblue;color:white;text-align:center">
                    Customer
                </th>
                <th style="background-color:skyblue;color:white;text-align:center">
                    PIC
                </th>
                <th style="background-color:skyblue;color:white;text-align:center">
                    Department
                </th>
                <th style="background-color:skyblue;color:white;text-align:center">
                    Note
                </th>
                <th style="background-color:skyblue;color:white;text-align:center" class="no-sort">
                    Action
                </th>
            </tr>
        </thead>
    </table>
</div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Customer Form</h4>
                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>
            <div class="modal-body">
                <div class="form-group" hidden="hidden">
                    <label for="Id">Id</label>
                    <input type="text" class="form-control" id="Id" placeholder="Id" />
                </div>
                <div class="form-group">
                    <label for="Employee">Employee</label>
                    <select id="Employee" class="pc form-control" name="Employee">
                    </select>
                </div>
                <div class="form-group">
                    <label for="Interviewer">Interviewer</label>
                    <input type="text" class="form-control" id="Interviewer" placeholder="Interviewer" />
                </div>
                <div class="form-group">
                    <label for="Datepicker">Date Time</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <button type="button" id="toggle" class="input-group-text"><i class="fa fa-calendar"></i></button>
                            <input type="datetime-local" id="datetimepicker" />
                        </div>
                    </div>
                    <input type="text" id="CreatedBy" hidden="hidden">
                    <input type="text" id="CreateDatetime" hidden="hidden">
                    <input type="text" id="UpdatedBy" hidden="hidden">
                    <input type="text" id="UpdateDatetime" hidden="hidden">
                </div>
                <div class="form-group">
                    <label for="Customer">Customer</label>
                    <select id="Customer" class="pc form-control">
                    </select>
                </div>
                <div class="form-group">
                    <label for="Divisi - Department">Divisi - Department</label>
                    <textarea class="form-control" id="Department" placeholder="Divisi - Department"></textarea>
                </div>
                <div class="form-group">
                    <label for="Note">Note</label>
                    <textarea class="form-control" id="Note" placeholder="Note"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" style="background-color:skyblue;border-color:skyblue" data-dismiss="modal" id="Save" onclick="Save();">Add</button>
                <button type="button" class="btn btn-primary" style="background-color:skyblue;border-color:skyblue" data-dismiss="modal" id="Update" onclick="Update();">Update</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <link href="~/js/datatables/responsive.bootstrap.min.css" rel="stylesheet" />

    <script src="~/js/datatables/jquery.dataTables.min.js"></script>
    <script src="~/js/datatables/dataTables.bootstrap4.min.js"></script>
    <script src="~/js/sweetalert2/sweetalert2@9.js"></script>
    <link href="~/css/uploaddownload.css" rel="stylesheet" />
    <script src="~/js/moment/moment.js"></script>

    <script>
        var table = null;
        $(document).ready(function () {
            //debugger;
            table = $('#table').DataTable({
                "serverside": true,
                "filter": true,
                "orderMulti": false,
                "lengthMenu": [[5, 10, 25, 50, 100], [5, 10, 25, 50, 100]],
                "ajax": {
                    "url": "/Interviews/LoadInterview",
                    "dataSrc": ''
                },
                "columnDefs":
                    [
                        {
                            "targets": [0],
                            "searchable": false,
                            "orderable": false,
                            "className": "text-center"
                        },
                        {
                            "targets": [1],
                            "className": "text-center"
                        },
                        {
                            "targets": [2],
                            "className": "text-center"
                        },
                        {
                            "targets": [3],
                            "className": "text-center"
                        },
                        {
                            "targets": [4],
                            "className": "text-center"
                        },
                        {
                            "targets": [5],
                            "className": "text-center"
                        },
                        {
                            "targets": [6],
                            "className": "text-center"
                        },
                        {
                            "targets": [7],
                            "className": "text-center"
                        },
                        {
                            "targets": [8],
                            "searchable": false,
                            "orderable": false
                        }],
                "order": [[1, 'asc']],
                "columns": [
                    {
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1 + "."
                        }
                    },
                    { "data": "nik", "name": "nik", "autoWidth": true },
                    { "data": "employee", "name": "employee", "autoWidth": true },
                    {
                        "data": "interview_datetime", "name": "interviewdatetime", "autoWidth": true, "render": function (data) {
                            return moment(data).format('DD/MM/YYYY, HH:mm');
                        }
                    },
                    { "data": "customer", "name": "customer", "autoWidth": true },
                    { "data": "pic", "name": "pic", "autoWidth": true },
                    { "data": "department", "name": "department", "autoWidth": true },
                    { "data": "note", "name": "note", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            return " <td><button type='button' class='btn btn-info' data-placement='left' data-toggle='tooltip' data-animation='false' title='Edit' onclick=GetById('" + full.id + "');><i class='mdi mdi-pencil'></i></button> <button type='button' class='btn btn-danger' data-placement='right' data-toggle='tooltip' data-animation='false' title='Delete' onclick=Delete('" + full.id + "');><i class='mdi mdi-eraser'></i></button ></td >";
                        }
                    }
                ]
            });
            table.on('order.dt search.dt', function () {
                table.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();
        });

        var Employees = []
        function LoadEmployee(element) {
            if (Employees.length === 0) {
                $.ajax({
                    type: "Get",
                    url: "/Employees/LoadEmployee",
                    success: function (data) {
                        //debugger;
                        Employees = data;
                        renderEmployee(element);
                    }
                });
            }
            else {
                renderEmployee(element);
            }
        }

        function renderEmployee(element) {
            var $option = $(element);
            $option.empty();
            $option.append($('<option/>').val('0').text('Select Employee').hide());
            $.each(Employees, function (i, val) {
                //debugger;
                $option.append($('<option/>').val(val.id).text(val.fullname));
            });
        }
        LoadEmployee($('#Employee'));

        var Customers = []
        function LoadCustomer(element) {
            if (Customers.length === 0) {
                $.ajax({
                    type: "Get",
                    url: "/Interviews/LoadCustomer",
                    success: function (data) {
                        //debugger;
                        Customers = data;
                        renderCustomer(element);
                    }
                });
            }
            else {
                renderCustomer(element);
            }
        }

        function renderCustomer(element) {
            var $option = $(element);
            $option.empty();
            $option.append($('<option/>').val('0').text('Select Customer').hide());
            $.each(Customers, function (i, val) {
                //debugger;
                $option.append($('<option/>').val(val.id).text(val.name));
            });
        }
        LoadCustomer($('#Customer'));

        function ClearScreen() {
            $('#Id').val('');
            $('#Employee').val('');
            $('#Interviewer').val('');
            $('#datetimepicker').val('');
            $('#Customer').val('');
            $('#Department').val('');
            $('#Note').val('');
            $('#Update').hide();
            $('#Save').show();
        }

        function GetById(id) {
            //debugger;
            $.ajax({
                url: "/Interviews/GetById/",
                data: { id: id }
            }).then((result) => {
                //debugger;
                if (result) {
                    $('#Id').val(result.id);
                    $('#Employee').val(result.employee);
                    $('#Interviewer').val(result.pic);
                    $('#datetimepicker').val(moment(result.interview_datetime).format('YYYY-MM-DD'));
                    //$('#datetimepicker').val(moment(result.interview_datetime).format('YYYY-MM-DD h:mm:ss a'));
                    //$('#datetimepicker').val(result.interviewdatetime);
                    $('#Customer').val(result.customer);
                    $('#Department').val(result.department);
                    $('#Note').val(result.note);
                    $('#myModal').modal('show');
                    $('#Update').show();
                    $('#Save').hide();
                }
            })
        }

        function Save() {
            if ($('#Employee').val() == 0) {
                Swal.fire({
                    position: 'center',
                    type: 'error',
                    title: 'Please Select Employee',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else if ($('#Interviewer').val() == 0) {
                Swal.fire({
                    position: 'center',
                    type: 'error',
                    title: 'Please Full Fill The Interviewer',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else if ($('#datetimepicker').val() == 0) {
                Swal.fire({
                    position: 'center',
                    type: 'error',
                    title: 'Please Full Fill The Interview Date',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else if ($('#Customer').val() == 0) {
                Swal.fire({
                    position: 'center',
                    type: 'error',
                    title: 'Please Select The Customer',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else if ($('#Department').val() == 0) {
                Swal.fire({
                    position: 'center',
                    type: 'error',
                    title: 'Please Full Fill The Department',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else if ($('#Note').val() == 0) {
                Swal.fire({
                    position: 'center',
                    type: 'error',
                    title: 'Please Full Fill The Note',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                debugger;
                var Interview = new Object();
                Interview.id = $('#Id').val();
                Interview.employee = $('#Employee').val();
                Interview.pic = $('#Interviewer').val();
                Interview.interview_datetime = $('#datetimepicker').val();
                Interview.customer = $('#Customer').val();
                Interview.department = $('#Department').val();
                Interview.note = $('#Note').val();
                $.ajax({
                    type: 'POST',
                    url: '/Interviews/InsertOrUpdate/',
                    data: Interview
                }).then((result) => {
                    debugger;
                    if (result.statusCode == 201 || result.statusCode == 204 || result.statusCode == 200) {
                        Swal.fire({
                            position: 'center',
                            type: 'success',
                            title: 'Customer Added Successfully'
                        });
                        table.ajax.reload();
                    } else {
                        Swal.fire('Error', 'Failed to Input', 'error');
                        ClearScreen();
                    }
                })
            }
        }

        function Update() {
            debugger;
            var Interview = new Object();
            Interview.id = $('#Id').val();
            Interview.employee = $('#Employee').val();
            Interview.pic = $('#Interviewer').val();
            Interview.interview_datetime = $('#datetimepicker').val();
            Interview.customer = $('#Customer').val();
            Interview.department = $('#Department').val();
            Interview.note = $('#Note').val();
            $.ajax({
                type: "POST",
                url: '/Interviews/InsertOrUpdate/',
                data: Interview
            }).then((result) => {
                debugger;
                if (result.statusCode == 201 || result.statusCode == 204 || result.statusCode == 200) {
                    Swal.fire({
                        position: 'center',
                        type: 'success',
                        title: 'Customer Updated Successfully'
                    });
                    table.ajax.reload();
                } else {
                    Swal.fire('Error', 'Failed to Update', 'error');
                    ClearScreen();
                }
            })
        }

        function Delete(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.value) {
                    debugger;
                    $.ajax({
                        url: "/Interviews/Delete/",
                        data: { id: id }
                    }).then((result) => {
                        debugger;
                        if (result.statusCode == 200) {
                            Swal.fire({
                                position: 'center',
                                type: 'success',
                                title: 'Delete Successfully'
                            });
                            table.ajax.reload();
                        } else {
                            Swal.fire('Error', 'Failed to Delete', 'error');
                            ClearScreen();
                        }
                    })
                };
            });
        }
    </script>
}

<style>
    #Progress_Status {
        width: 50%;
        background-color: #ddd;
    }

    #myprogressBar {
        width: 1%;
        height: 35px;
        background-color: #4CAF50;
        text-align: center;
        line-height: 32px;
        color: black;
    }
</style>