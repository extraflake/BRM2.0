#pragma checksum "D:\Metrodata\BRM2.0\CLIENT\Views\Interviews\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b725dc167718311b74ccaccf878364e86042a5c5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Interviews_Index), @"mvc.1.0.view", @"/Views/Interviews/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Interviews/Index.cshtml", typeof(AspNetCore.Views_Interviews_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\Metrodata\BRM2.0\CLIENT\Views\_ViewImports.cshtml"
using CLIENT;

#line default
#line hidden
#line 2 "D:\Metrodata\BRM2.0\CLIENT\Views\_ViewImports.cshtml"
using CLIENT.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b725dc167718311b74ccaccf878364e86042a5c5", @"/Views/Interviews/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"705514d41fa213e299212dd0a1d48cc26af8314f", @"/Views/_ViewImports.cshtml")]
    public class Views_Interviews_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn-dwn fa fa-file-excel-o"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("tabindex", new global::Microsoft.AspNetCore.Html.HtmlString("0"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("aria-controls", new global::Microsoft.AspNetCore.Html.HtmlString("example23"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-placement", new global::Microsoft.AspNetCore.Html.HtmlString("down"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Export To Excel"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Interviews", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "exporttoexcel", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn-add fa fa-file-pdf-o"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Export To PDF"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Report", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/datatables/responsive.bootstrap.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/datatables/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/datatables/dataTables.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/sweetalert2/sweetalert2@9.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/uploaddownload.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/moment/moment.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\Metrodata\BRM2.0\CLIENT\Views\Interviews\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutAdministrator.cshtml";

#line default
#line hidden
            BeginContext(103, 592, true);
            WriteLiteral(@"<div class=""container-fluid"">
    <div class=""row"">
        <div class=""col-md-4 form-inline"">
            <div class=""upload-btn-wrapper"">
                <button class=""fa fa-cloud-upload btn btn-up""></button>
                <input type=""file"" name=""formFile"" id=""formFile"" onchange=""uploadFile('formFile');"" />
            </div>
            <div class=""upload-btn-wrapper"">
                <button type=""button"" id=""Create"" class=""btn right fa fa-plus-circle btn-add"" data-toggle=""modal"" data-target=""#myModal"" onclick=""ClearScreen();""></button>
            </div>
            ");
            EndContext();
            BeginContext(695, 196, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6e9cec6a63574a7ba0b8d13072c02fd2", async() => {
                BeginContext(873, 14, true);
                WriteLiteral("\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(891, 14, true);
            WriteLiteral("\r\n            ");
            EndContext();
            BeginContext(905, 185, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c0a577eb36d24c36b72dcaa787b51ae1", async() => {
                BeginContext(1072, 14, true);
                WriteLiteral("\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1090, 5503, true);
            WriteLiteral(@"
        </div>
    </div>
    <br />
    <div class=""row"">
        <div class=""col"">
            <label for=""Customer"">From</label><br />
            <input type=""date"" id=""startDate"" class=""form-control"" placeholder=""Start Date"">
        </div>
        <div class=""col"">
            <label for=""Customer"">To</label><br />
            <input type=""date"" id=""endDate"" class=""form-control"" placeholder=""End Date"">
        </div>
        <div class=""col"">
            <br />
            <button type=""submit"" id=""search"" class=""btn btn-block btn-primary"" onclick=""LoadIndexFilterSort()"">Filter</button>
        </div>
        <div class=""col"">
            <br />
            <button type=""submit"" id=""reset"" class=""btn btn-block btn-primary"" onclick=""LoadIndexReset()"">Reset</button>
        </div>
    </div>
    <br />
    <table class=""table dt-responsive nowrap"" id=""table"" width=""100%"" cellspacing=""0"">
        <thead>
            <tr>
                <th style=""background-color:skyblue;color:w");
            WriteLiteral(@"hite;text-align:center;width:100px"">
                    No.
                </th>
                <th style=""background-color:skyblue;color:white;text-align:center"">
                    NIK
                </th>
                <th style=""background-color:skyblue;color:white;text-align:center"">
                    Employee
                </th>
                <th style=""background-color:skyblue;color:white;text-align:center"">
                    DateTime
                </th>
                <th style=""background-color:skyblue;color:white;text-align:center"">
                    Customer
                </th>
                <th style=""background-color:skyblue;color:white;text-align:center"">
                    PIC
                </th>
                <th style=""background-color:skyblue;color:white;text-align:center"">
                    Department
                </th>
                <th style=""background-color:skyblue;color:white;text-align:center"">
                    Note
       ");
            WriteLiteral(@"         </th>
                <th style=""background-color:skyblue;color:white;text-align:center"" class=""no-sort"">
                    Action
                </th>
            </tr>
        </thead>
    </table>
</div>
<div class=""modal fade"" id=""myModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"" id=""myModalLabel"">Customer Form</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">×</button>
            </div>
            <div class=""modal-body"">
                <div class=""form-group"" hidden=""hidden"">
                    <label for=""Id"">Id</label>
                    <input type=""text"" class=""form-control"" id=""Id"" placeholder=""Id"" />
                </div>
                <div class=""form-group"">
                    <label for=""Employee"">Employee</label>
                    <select i");
            WriteLiteral(@"d=""Employee"" class=""pc form-control"" name=""Employee"">
                    </select>
                </div>
                <div class=""form-group"">
                    <label for=""Interviewer"">Interviewer</label>
                    <input type=""text"" class=""form-control"" id=""Interviewer"" placeholder=""Interviewer"" />
                </div>
                <div class=""form-group"">
                    <label for=""Datepicker"">Date Time</label>
                    <div class=""input-group"">
                        <div class=""input-group-prepend"">
                            <button type=""button"" id=""toggle"" class=""input-group-text""><i class=""fa fa-calendar""></i></button>
                            <input type=""datetime-local"" id=""datetimepicker"" />
                        </div>
                    </div>
                    <input type=""text"" id=""CreatedBy"" hidden=""hidden"">
                    <input type=""text"" id=""CreateDatetime"" hidden=""hidden"">
                    <input type=""text"" id=""Upd");
            WriteLiteral(@"atedBy"" hidden=""hidden"">
                    <input type=""text"" id=""UpdateDatetime"" hidden=""hidden"">
                </div>
                <div class=""form-group"">
                    <label for=""Customer"">Customer</label>
                    <select id=""Customer"" class=""pc form-control"">
                    </select>
                </div>
                <div class=""form-group"">
                    <label for=""Divisi - Department"">Divisi - Department</label>
                    <textarea class=""form-control"" id=""Department"" placeholder=""Divisi - Department""></textarea>
                </div>
                <div class=""form-group"">
                    <label for=""Note"">Note</label>
                    <textarea class=""form-control"" id=""Note"" placeholder=""Note""></textarea>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" style=""background-color:skyblue;border-color:skyblue"" data-dismiss=""modal"" id");
            WriteLiteral(@"=""Save"" onclick=""Save();"">Add</button>
                <button type=""button"" class=""btn btn-primary"" style=""background-color:skyblue;border-color:skyblue"" data-dismiss=""modal"" id=""Update"" onclick=""Update();"">Update</button>
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>
            </div>
        </div>
    </div>
</div>

");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(6611, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(6617, 77, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1943bb6af6024d4d9f5c0219fad8a585", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6694, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(6702, 64, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "89b21af0a9b7491ba3f028295014169b", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6766, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(6772, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "58960f2f5d0b461baa4e9754d8f300f5", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6840, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(6846, 57, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "000eb301b3f04b50b8af8ee051ca264f", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6903, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(6909, 57, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "6c91dea3b65442b9ada7de00d734c4b0", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6966, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(6972, 45, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fc4dbf7a58b64388a255391b0c8466dc", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7017, 13283, true);
                WriteLiteral(@"

    <script>
        var table = null;
        $(document).ready(function () {
            debugger;
            table = $('#table').DataTable({
                ""serverside"": true,
                ""filter"": true,
                ""orderMulti"": false,
                ""lengthMenu"": [[5, 10, 25, 50, 100], [5, 10, 25, 50, 100]],
                ""ajax"": {
                    ""url"": ""/Interviews/LoadInterview"",
                    ""dataSrc"": ''
                },
                ""columnDefs"":
                    [
                        {
                            ""targets"": [0],
                            ""searchable"": false,
                            ""orderable"": false,
                            ""className"": ""text-center""
                        },
                        {
                            ""targets"": [1],
                            ""className"": ""text-center""
                        },
                        {
                            ""targets"": [2],
         ");
                WriteLiteral(@"                   ""className"": ""text-center""
                        },
                        {
                            ""targets"": [3],
                            ""className"": ""text-center""
                        },
                        {
                            ""targets"": [4],
                            ""className"": ""text-center""
                        },
                        {
                            ""targets"": [5],
                            ""className"": ""text-center""
                        },
                        {
                            ""targets"": [6],
                            ""className"": ""text-center""
                        },
                        {
                            ""targets"": [7],
                            ""className"": ""text-center""
                        },
                        {
                            ""targets"": [8],
                            ""searchable"": false,
                            ""orderable"": false");
                WriteLiteral(@"
                        }],
                ""order"": [[1, 'asc']],
                ""columns"": [
                    {
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1 + "".""
                        }
                    },
                    { ""data"": ""nik"", ""name"": ""nik"", ""autoWidth"": true },
                    { ""data"": ""employee"", ""name"": ""employee"", ""autoWidth"": true },
                    {
                        ""data"": ""interview_datetime"", ""name"": ""interviewdatetime"", ""autoWidth"": true, ""render"": function (data) {
                            return moment(data).format('DD/MM/YYYY, HH:mm');
                        }
                    },
                    { ""data"": ""customer"", ""name"": ""customer"", ""autoWidth"": true },
                    { ""data"": ""pic"", ""name"": ""pic"", ""autoWidth"": true },
                    { ""data"": ""department"", ""name"": ""department"", ""autoWidth"": true },
         ");
                WriteLiteral(@"           { ""data"": ""note"", ""name"": ""note"", ""autoWidth"": true },
                    {
                        ""render"": function (data, type, full, meta) {
                            return "" <td><button type='button' class='btn btn-info' data-placement='left' data-toggle='tooltip' data-animation='false' title='Edit' onclick=GetById('"" + full.id + ""');><i class='mdi mdi-pencil'></i></button> <button type='button' class='btn btn-danger' data-placement='right' data-toggle='tooltip' data-animation='false' title='Delete' onclick=Delete('"" + full.id + ""');><i class='mdi mdi-eraser'></i></button ></td >"";
                        }
                    }
                ]
            });
            table.on('order.dt search.dt', function () {
                table.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();
        });

        var Employees = []
        function LoadEmpl");
                WriteLiteral(@"oyee(element) {
            if (Employees.length === 0) {
                $.ajax({
                    type: ""Get"",
                    url: ""/Employees/LoadEmployee"",
                    success: function (data) {
                        //debugger;
                        Employees = data;
                        renderEmployee(element);
                    }
                });
            }
            else {
                renderEmployee(element);
            }
        }

        function renderEmployee(element) {
            var $option = $(element);
            $option.empty();
            $option.append($('<option/>').val('0').text('Select Employee').hide());
            $.each(Employees, function (i, val) {
                //debugger;
                $option.append($('<option/>').val(val.id).text(val.fullname));
            });
        }
        LoadEmployee($('#Employee'));

        var Customers = []
        function LoadCustomer(element) {
            if (Customers.l");
                WriteLiteral(@"ength === 0) {
                $.ajax({
                    type: ""Get"",
                    url: ""/Interviews/LoadCustomer"",
                    success: function (data) {
                        //debugger;
                        Customers = data;
                        renderCustomer(element);
                    }
                });
            }
            else {
                renderCustomer(element);
            }
        }

        function renderCustomer(element) {
            var $option = $(element);
            $option.empty();
            $option.append($('<option/>').val('0').text('Select Customer').hide());
            $.each(Customers, function (i, val) {
                //debugger;
                $option.append($('<option/>').val(val.id).text(val.name));
            });
        }
        LoadCustomer($('#Customer'));

        function ClearScreen() {
            $('#Id').val('');
            $('#Employee').val('');
            $('#Interviewer').val('');
  ");
                WriteLiteral(@"          $('#datetimepicker').val('');
            $('#Customer').val('');
            $('#Department').val('');
            $('#Note').val('');
            $('#Update').hide();
            $('#Save').show();
        }

        function GetById(id) {
            //debugger;
            $.ajax({
                url: ""/Interviews/GetById/"",
                data: { id: id }
            }).then((result) => {
                //debugger;
                if (result) {
                    $('#Id').val(result.id);
                    $('#Employee').val(result.employee);
                    $('#Interviewer').val(result.pic);
                    $('#datetimepicker').val(moment(result.interview_datetime).format('YYYY-MM-DD'));
                    //$('#datetimepicker').val(moment(result.interview_datetime).format('YYYY-MM-DD h:mm:ss a'));
                    //$('#datetimepicker').val(result.interviewdatetime);
                    $('#Customer').val(result.customer);
                    $('#Depart");
                WriteLiteral(@"ment').val(result.department);
                    $('#Note').val(result.note);
                    $('#myModal').modal('show');
                    $('#Update').show();
                    $('#Save').hide();
                }
            })
        }

        function Save() {
            if ($('#Employee').val() == 0) {
                Swal.fire({
                    position: 'center',
                    type: 'error',
                    title: 'Please Select Employee',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else if ($('#Interviewer').val() == 0) {
                Swal.fire({
                    position: 'center',
                    type: 'error',
                    title: 'Please Full Fill The Interviewer',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else if ($('#datetimepicker').val() == 0) {
                ");
                WriteLiteral(@"Swal.fire({
                    position: 'center',
                    type: 'error',
                    title: 'Please Full Fill The Interview Date',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else if ($('#Customer').val() == 0) {
                Swal.fire({
                    position: 'center',
                    type: 'error',
                    title: 'Please Select The Customer',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else if ($('#Department').val() == 0) {
                Swal.fire({
                    position: 'center',
                    type: 'error',
                    title: 'Please Full Fill The Department',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else if ($('#Note').val() == 0) {
                Swal.fire({
      ");
                WriteLiteral(@"              position: 'center',
                    type: 'error',
                    title: 'Please Full Fill The Note',
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                debugger;
                var Interview = new Object();
                Interview.id = $('#Id').val();
                Interview.employee = $('#Employee').val();
                Interview.pic = $('#Interviewer').val();
                Interview.interview_datetime = $('#datetimepicker').val();
                Interview.customer = $('#Customer').val();
                Interview.department = $('#Department').val();
                Interview.note = $('#Note').val();
                $.ajax({
                    type: 'POST',
                    url: '/Interviews/InsertOrUpdate/',
                    data: Interview
                }).then((result) => {
                    debugger;
                    if (result.statusCode =");
                WriteLiteral(@"= 201 || result.statusCode == 204 || result.statusCode == 200) {
                        Swal.fire({
                            position: 'center',
                            type: 'success',
                            title: 'Interview Added Successfully'
                        });
                        table.ajax.reload();
                    } else {
                        Swal.fire('Error', 'Failed to Input', 'error');
                        ClearScreen();
                    }
                })
            }
        }

        function Update() {
            debugger;
            var Interview = new Object();
            Interview.id = $('#Id').val();
            Interview.employee = $('#Employee').val();
            Interview.pic = $('#Interviewer').val();
            Interview.interview_datetime = $('#datetimepicker').val();
            Interview.customer = $('#Customer').val();
            Interview.department = $('#Department').val();
            Interview.note = $('#");
                WriteLiteral(@"Note').val();
            $.ajax({
                type: ""POST"",
                url: '/Interviews/InsertOrUpdate/',
                data: Interview
            }).then((result) => {
                debugger;
                if (result.statusCode == 201 || result.statusCode == 204 || result.statusCode == 200) {
                    Swal.fire({
                        position: 'center',
                        type: 'success',
                        title: 'Interview Updated Successfully'
                    });
                    table.ajax.reload();
                } else {
                    Swal.fire('Error', 'Failed to Update', 'error');
                    ClearScreen();
                }
            })
        }

        function Delete(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: ""You won't be able to revert this!"",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelBut");
                WriteLiteral(@"tonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.value) {
                    debugger;
                    $.ajax({
                        url: ""/Interviews/Delete/"",
                        data: { id: id }
                    }).then((result) => {
                        debugger;
                        if (result.statusCode == 200) {
                            Swal.fire({
                                position: 'center',
                                type: 'success',
                                title: 'Delete Successfully'
                            });
                            table.ajax.reload();
                        } else {
                            Swal.fire('Error', 'Failed to Delete', 'error');
                            ClearScreen();
                        }
                    })
                };
            });
        }
    </script>
");
                EndContext();
            }
            );
            BeginContext(20303, 294, true);
            WriteLiteral(@"
<style>
    #Progress_Status {
        width: 50%;
        background-color: #ddd;
    }

    #myprogressBar {
        width: 1%;
        height: 35px;
        background-color: #4CAF50;
        text-align: center;
        line-height: 32px;
        color: black;
    }
</style>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
